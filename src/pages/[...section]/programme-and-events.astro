---
import { type CollectionEntry, getCollection } from "astro:content";
import SectionsLayout from "../../layouts/sections.layout.astro";
import SectionProgrammeEventList from "@/components/widgets/section-programme-event-list.astro";
import {
  OSMService,
  type EventItem,
  type ProgrammeItem,
} from "@/code/osm.service";

export async function getStaticPaths() {
  const sectionsCollection = await getCollection("sections");
  return sectionsCollection.map((section) => ({
    params: { section: section.slug },
    props: section,
  }));
}
type Props = CollectionEntry<"sections">;

const section = Astro.props;
const { programmeAndEvents, title, meeting } = section.data;

const osm = new OSMService();
let items: (ProgrammeItem | EventItem)[] = [];

if (programmeAndEvents?.programmeFeed) {
  items.push(
    ...(await osm.GetProgrammeItems(programmeAndEvents?.programmeFeed))
  );
}

if (programmeAndEvents?.eventsFeed) {
  items.push(...(await osm.GetEventItems(programmeAndEvents?.eventsFeed)));
}

items = items.sort((a, b) => {
  if (a.date.getTime() < b.date.getTime()) return -1;
  else if (b.date.getTime() < a.date.getTime()) return 1;
  else return 0;
});
---

<SectionsLayout
  {...section.data}
  title={"Upcoming " + title + "  Programme & Events"}
>
  <SectionProgrammeEventList items={items} meetingDay={meeting.day} />
</SectionsLayout>
